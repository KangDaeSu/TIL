# 16진수: 980A = 
# 십진수: 4508 = 4*1000 + 5*100 + 0*10 + 8 * 1
# 팔진수: 7605 = 
# 이진수: 1101 = 1*2^3 + 1*2^2 + 0*2^1 + 1*2^0

# a = 2+3
# a = 0b10 + 0b11
# print(a)
# a = 0b10 & 0b11
# print(a)
# a = 0b10 | 0b11
# print(a)
# a = 0b10 << 1
# print(a)
# a = 0b10 >> 1
# print(a)

N = 3
nums = [10, 20, 32]
# {} : 10, 20, 32 모두 포함 안되어 있다. 1, 0: bits = {0, 0, 0}
# {10}: [1, 0, 0]
# {20}: [0, 1, 0]
# , {...}, 
# {10, 20, 32}: [1, 1, 1]
# {} => 0b000
# {10} => 0b001
# {20} => 0b010
# {32} => 0b100
# {10, 20} => 0b011
# ...
# {10, 20, 32} => 0b111 :7

for i in range(1<<N): # 8(0b1000 => 1<<<3), 16(0b10000==>1<<<4)
# for i in rnage(2**N):
#     print(i)

# i = 0b010
    sumV = 0
    for j in range(N):
        t = i & (1<<j)
        if t == 0:
            print(0, end= ' ')
        else:
            print(1, end= ' ')
            sumV += nums[j]
    print(sumV)
# i&0b001 => 000/001 (1)
# i&0b010 => 000/010 (2)
# i&0b100 => 000/100 (4)